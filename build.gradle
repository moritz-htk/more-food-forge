plugins {
    id 'net.minecraftforge.gradle' version '6.0.+'
}

version = project.mod_version
group = project.mod_group

base {
    archivesName = project.mod_id + "-forge"
}

minecraft {
    mappings channel: 'official', version: project.minecraft_version

    reobf = false

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            args '--mod', mod_id, '--all', '--output', file('src/main/generated/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets {
    main {
        resources.srcDir file('src/main/generated')
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

jar {
    exclude '**/more_food/datagen/**'
    exclude '.cache/**'
}

tasks.withType(JavaCompile).tap {
    configureEach {
        options.encoding = 'UTF-8'
        options.release = 21
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}